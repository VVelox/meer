%YAML 1.1
---

# @@@@@@@@@@  @@@@@@@@ @@@@@@@@ @@@@@@@    
# @@! @@! @@! @@!      @@!      @@!  @@@   Quadrant Information Security
# @!! !!@ @!@ @!!!:!   @!!!:!   @!@!!@a    https://quadrantsec.com
# !!:     !!: !!:      !!:      !!: :!a    Copyright (C) 2018-2021
#  :      :   : :: ::  : :: ::   :   : :

#  Meer configuration file [http://github.com/quadrantsec/meer]
#  Champ Clark III & The Quadrant Information Security Team: https://quadrantsec.com
#  Copyright (C) 2018-2022 Quadrant Information Security., et al.

meer-core:

#############################################################################
# Core Meer Settings
#############################################################################

  core:

    hostname: "mysensor"  # Unique name for this sensor (no spaces)
    interface: "eth0"     # Can be anything.  Sagan "syslog", suricata "eth0".

    description: "My awesome sensor!"   # Description of this sensor.  This 
                                        # will be added to _all_ logs!
                                        
    type: "PacketAnalysis"              # One line statement to describe the
                                        # "sensor_type".  This can be used to
                                        # narrow down events in software like
                                        # Elasticsearch, etc.  If present, 
                                        # this field is added to the EVE JSON.
 
    payload-buffer-size: 1024kb         # This is the max size buffer that can
                                        # be read in/written out.  It should
                                        # match your payload-buffer-size in 
                                        # Surcata or be larger.  Valid 
                                        # Notations are "kb", "mb" and "gb".

    runas: "suricata"	  # User to "drop privileges" too. 
    #runas: "sagan"

    classification: "/etc/suricata/classification.config"
    #classification: "/usr/local/etc/sagan-rules/classification.config"

    meer_log: "/var/log/meer/meer.log"          # Meer log file
    lock_file: "/var/log/meer/meer.lck"         # To prevent dueling processes.

    input-type: "file"   

    #########################################################################
    # calculate-stats
    #
    # When Suricata event_type "stats" is collected,  the data is the 
    # accumulation over the run time (ie - 1000,2000,3000,4000).  While this
    # works well with tools like RRTool and LibreNMS,  it doesn't work well 
    # if you want to extract data from specific time ranges.  When this option
    # is enabled,  a new key/value pair of "caclulated" is add to the event
    # type of "stats".  This is the amount of data _between_ stats recordings
    # (ie - 1000,1000,1000,1000).  This can be useful when creating visulations
    # of data around certain time ranges.  The new key/value pair "calculated"
    # only performs the math on the follow:
    #
    # kernel_packets, kernel_drops, errors, pkts, bytes, invalid, ipv4, 
    # ipv6, tcp and udp. 
    #########################################################################

    calculate-stats: false

    #########################################################################
    # fingerprint
    #
    # This enables the "fingerprint" option.  When used in conjunction with the 
    # "fingerprint.rules" (https://github.com/quadrantsec/fingerprint-rules), 
    # this will record things like operating system type, type of system it is
    # (client/server), etc.  This data gets routed differently and does not 
    # generate "alerts".  The "fingerprint_reader" & "fingerprint_writer" 
    # tasks are option allow you to split up the fingerprinting tasks.  
    # 
    # For more information about "Passive Fingerprinting", watch our Suricon
    # video at https://www.youtube.com/watch?v=n5O4-iqAlVo 
    #########################################################################
  
    fingerprint: disabled
    fingerprint_networks: "10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12"

    fingerprint_reader: enabled		# This option appends "fingerprint"
                                        # data to "alert". 

    fingerprint_writer: enabled		# This option detects "fingerprint" 
                                        # alerts and writes them to Redis.

    #########################################################################
    # client_stats
    #
    # "client_stats" are specific to Sagan and allow Sagan/Meer to record
    # information about systems sending Sagan data.  This has no affect on 
    # Suricata. 
    #########################################################################

    client_stats: disabled

    #########################################################################
    # oui_lookup
    #
    # The "oui_lookup" allows Meer to lookup vender information based off
    # a MAC address.  Information is stored in fingerprinting JSON.  The
    # MAC/OUI database
    #
    # https://gitlab.com/wireshark/wireshark/raw/master/manuf
    #########################################################################

    oui_lookup: disabled
    oui_filename: "/usr/local/etc/manuf"

    #########################################################################
    # dns
    #
    # If "dns" is enabled, Meer will do reverse DNS (PTR) lookups of an IP. 
    # The "dns_cache" is the amount of time Meer should "cache" a PTR record
    # for.  The DNS cache prevents Meer from doing repeated lookups of an 
    # already looked up PTR record.  This reduces overloading DNS servers.
    #########################################################################

    dns: enabled
    dns_cache: 900	# Time in seconds. 
    dns_lookup_types: "alert,ssh,http,rdp,ftp"  # The event_type to do DNS
                                                # PTR lookups for.  This can
                                                # be the event_type or "all".

    #########################################################################
    # geoip
    #
    # If "geoip" is enabled, Meer will add GeoIP information (JSON) to 
    # "alert" data.  You'll need to compile Meer with Maxmind's GeoIP
    # support (--enable-geoip). Data that will be added,  when available, 
    # includes ISO country code, city, subdivision, postal code, 
    # timezone,  latitude and longitude. 
    #########################################################################

    geoip: disabled
    geoip_database: "/usr/local/share/GeoIP2/GeoLite2-City.mmdb"

    #########################################################################
    # ioc-collector
    #
    # When enabled with the "Elasticsearch" output, "ioc-collector" allows 
    # Meer to store useful information (src_ip, dest_ip, hashes) into 
    # an Elasticsearch/Opensearch/Zincsearch backend for rapid retrieval. 
    # This stores data from Suricata/Sagan log files in a more "compressed" 
    # and "non-repetitive" format.  The advantage to this allows for rapid
    # looks to verify if hashes (sha1, sha256, etc), IP addresses, or domain
    # names have been seen within your enviornment.
    # 
    # By default "ioc-collector" stores:
    #
    # src_ip, dest_ip from "flow" logs. 
    # hashes (md5, sha1, sha256) from the "fileinfo" log.
    # JA3/JA3S hashes from TLS logs
    # DNS "queries" from "dns" logs. 
    # HTTP URL and User-Agents from "http"
    # SSH banner informaion from "ssh" logs.
    #
    # Hint: You'll likely want to add your network blocks to the "ioc-ignore"
    # list. 
    #########################################################################

    ioc-collector: enabled
    ioc-debug: disabled
    ioc-ignore-networks: "10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12"
    ioc-routing: "flow, http, ssh, fileinfo, tls, dns, smb, ftp"

#############################################################################
# Input Plugins 
#
# This allows you to control how Meer reads in data from Suricata/Sagan. 
# In the "core" section above,  you'll want to set your "input-type" to one
# of the below.  You'll also need to configure (if needed) you desired 
# input method.
#############################################################################

input-plugins: 

  file: 
    
    follow_eve: "/var/log/suricata/alert.json"
    waldo_file: "/var/log/meer/suricata-waldo.waldo"

  redis:

    debug: no
    server: "127.0.0.1"
#    password: "mypassword"
    port: 6379
    key: "suricata"

#############################################################################
# Output Plugins 
#
# After processing,  were would you like Meer (enriched) data to go? You can
# use multiple outputs.
#############################################################################

output-plugins:

  ###########################################################################
  # file
  # 
  # The 'file' output writes post processed EVE data to a file.  For example,
  # if Meer is adding GeoIP and DNS information,  the new JSON data will 
  # written to the 'file_location'.
  ###########################################################################

  file:

    enabled: no
    file_location: "/path/to/output/file"

    routing:

      - alert
      - files
      - flow
      - dns
      - http
      - tls
      - ssh
      - smtp
      - email
      - fileinfo
      - dhcp
      - stats
      - rdp
      - sip
      - ftp
      - ikev2
      - nfs
      - tftp
      - smb
      - dcerpc
      - mqtt
      - netflow
      - metadata
      - dnp3
      - anomaly
      - fingerprint

  ###########################################################################
  # pipe
  # 
  # This allows Meer to send a copy of an event to a named pipe (FIFO) in 
  # its raw,  JSON form.  This allows for third party tools, like Sagan, 
  # to do further analysis on the event. 
  ###########################################################################
  
  pipe:

    enabled: no
    pipe_location: "/var/sagan/fifo/sagan.fifo"
    pipe_size: 1048576                        # System must support F_GETPIPE_SZ/F_SETPIPE_SZ

    routing:

      - alert
      - files
      - flow
      - dns
      - http
      - tls
      - ssh
      - smtp
      - email
      - fileinfo
      - dhcp
      - stats
      - rdp
      - sip
      - ftp
      - ikev2
      - nfs
      - tftp
      - smb
      - dcerpc
      - mqtt
      - netflow
      - metadata
      - dnp3
      - anomaly
      - fingerprint

  ###########################################################################
  # external 
  #
  # EVE data (JSON) is passed via stdin to the external program.   The 
  # external program can be written in any language you choose (shell script, 
  # Python, Perl, etc). 
  #
  # This can be useful for automatic firewalling,  building block lists, 
  # replicating "snortsam" functionality, etc.  See the "tools/external"
  # directory for example routines that use this feature.
  #
  # If this option is enabled, any rule that has the metadata of "meer 
  # external" (ie - "metadata:meer external") will cause the external script 
  # to be executed.  Execution can also be controlled by Snort metadata
  # "policies".
  ###########################################################################

  external:

    enabled: no
    debug: no

    # Execution of an external program based on metadata "policy".  When Meer
    # encounters a "policy" (security-ips, balanced-ips, connectivity-ips, 
    # and max-detect-ips),  Meer will execute the specified routine.  
    # Currently only Snort rules have these types of polices.  This can be
    # useful when you want to execute an external script that will to "block"
    # or "firewall" based off the policy types.  This section only applies if
    # you are using Suricata with Snort rules.  Snort's polices are
    # below:

    # connectivity-ips  - You run a lot of real time applications (VOIP, 
    # financial transactions, etc), and don't want to run any rules that 
    # could affect the current performance of your sensor.  The rules in this 
    # category make snort happy, additionally this category focuses on the high
    # profile most likely to affect the largest number of people type of
    # vulnerabilities.

    # balanced-ips - You are normal, you run normal stuff and you want normal
    # security protections.  This is the best policy to start from if you are 
    # new, old, or just plain average.  If you don't have any special
    # requirements for super high speeds or super secure networks start here.

    # security-ips - You don't care about dropping your bosses email, everything
    # in your environment is tightly regulated and you don't tolerate people 
    # stepping outside of your security policy.  This policy hates on IM, P2P,
    # vulnerabilities, malware, web apps that cause productivity loss, remote
    # access, and just about anything not related to getting work done.  
    # If you run your network with an iron fist start here.

    # I can't seem to find any documentation on what "max-detect-ips" is :(
   
    program: "/usr/local/bin/external_program"

    #meer_metadata: enabled
    #cisco_policies: "policy-security-ips,policy-max-detect-ips,policy-connectivity-ips,policy-balanced-ips"
    #et_signature_severity: "critical,major"		# Critical,Major,Minor,Informational

    # You likely don't want to route to much data to a external program. External
    # output is slow.

    routing:

      - alert

  ###########################################################################
  # redis
  # 
  # This allows you to send Suricata/Sagan EVE data to a Redis database. 
  # This will mimic the way Suricata writes EVE data to Redis with the 
  # exception of "client_stats" which is a Sagan specific processor. 
  ###########################################################################

  redis:

    enabled: no
    debug: no
    server: 127.0.0.1
    #password: "mypassword"
    port: 6379
    batch: 1                 # Batching (pipelining) data.  When set to 1, 
                             # no batching is performed and data is immediately 
                             # sent to Redis.  If increase,  data is batched 
                             # and sent in bulk to increase performance.  The max
                             # is 100.
    key: "suricata"	     # Default 'channel' to use.  If none is specified, the 
                             # channel name will become the "event_type".
                             # (ie - alert, dhcp, dns, flow, etc). 
    mode: lpush              # How to publish data to Redis.  Valid types are 
                             # "list" ("lpush"), "rpush", "channel" ("publish"), 
                             # "set".
    append_id: disabled      # If enabled, this will append the "hostname" and
                             # waldo position to the key.  For example,  the 
                             # Redis object can become "alert|hostname|1". This
                             # is good when you are using the "set" mode. 

    routing:

      - alert
      - files
      - flow
      - dns
      - http
      - tls
      - ssh
      - smtp
      - email
      - fileinfo
      - dhcp
      - stats
      - rdp
      - sip
      - ftp
      - ikev2
      - nfs
      - tftp
      - smb
      - dcerpc
      - mqtt
      - netflow
      - metadata
      - dnp3
      - anomaly
      - fingerprint

    # This controls sending Sagan client tracking data to Redis.  This has no affect 
    # on Suricata systems. 
 
      - client_stats

  ###########################################################################
  # elasticsearch
  #
  # This section allows you to route data to Elasticsearch.  This module 
  # supports authentication and TLS support.
  ###########################################################################

  elasticsearch:

    enabled: no
    debug: no
    url: "http://127.0.0.1:9200/_bulk"
    index: "suricata_$EVENTTYPE_$YEAR$MONTH$DAY"
    insecure: true                                      # Only applied when https is used.
    batch: 100						# Batch size per/writes.
    threads: 10						# Number of "writer" threads.
    #username: "myusername"
    #password: "mypassword"

    routing:

      - alert
      - files
      - flow
      - dns
      - http
      - tls
      - ssh
      - smtp
      - email
      - fileinfo
      - dhcp
      - stats
      - rdp
      - sip
      - ftp
      - ikev2
      - nfs
      - tftp
      - smb
      - dcerpc
      - mqtt
      - netflow
      - metadata
      - dnp3
      - anomaly
      - fingerprint


